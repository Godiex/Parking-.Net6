¡d
^C:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Adapters\GenericRepository.cs
	namespace 	
Infrastructure
 
. 
Adapters !
{" #
public

 

class

 
GenericRepository

 "
<

" #
E

# $
>

$ %
:

& '
IGenericRepository

( :
<

: ;
E

; <
>

< =
where

> C
E

D E
:

F G
Domain

H N
.

N O
Entities

O W
.

W X
Base

X \
.

\ ]
DomainEntity

] i
{ 
readonly 
PersistenceContext #
_context$ ,
;, -
public 
GenericRepository  
(  !
PersistenceContext! 3
context4 ;
); <
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
E 
> 
AddAsync %
(% &
E& '
entity( .
). /
{ 	
_ 
= 
entity 
?? 
throw 
new  #!
ArgumentNullException$ 9
(9 :
$str: B
,B C
$strC [
)[ \
;\ ]
_context 
. 
Set 
< 
E 
> 
( 
) 
. 
Add !
(! "
entity" (
)( )
;) *
await 
this 
. 
CommitAsync "
(" #
)# $
;$ %
return 
entity 
; 
} 	
public 
async 
Task 
DeleteAsync %
(% &
E& '
entity( .
). /
{ 	
if 
( 
entity 
!= 
null 
) 
{ 
_context 
. 
Set 
< 
E 
> 
(  
)  !
.! "
Remove" (
(( )
entity) /
)/ 0
;0 1
await 
this 
. 
CommitAsync &
(& '
)' (
.( )
ConfigureAwait) 7
(7 8
false8 =
)= >
;> ?
}   
}!! 	
public## 
async## 
Task## 
<## 
IEnumerable## %
<##% &
E##& '
>##' (
>##( )
GetAsync##* 2
(##2 3

Expression##3 =
<##= >
Func##> B
<##B C
E##C D
,##D E
bool##F J
>##J K
>##K L
?##L M
filter##N T
=##U V
null##W [
,##[ \
Func##] a
<##a b

IQueryable##b l
<##l m
E##m n
>##n o
,##o p
IOrderedQueryable	##q Ç
<
##Ç É
E
##É Ñ
>
##Ñ Ö
>
##Ö Ü
?
##Ü á
orderBy
##à è
=
##ê ë
null
##í ñ
,
##ñ ó
string
##ò û%
includeStringProperties
##ü ∂
=
##∑ ∏
$str
##π ª
,
##ª º
bool
##Ω ¡

isTracking
##¬ Ã
=
##Õ Œ
false
##œ ‘
)
##‘ ’
{$$ 	

IQueryable%% 
<%% 
E%% 
>%% 
query%%  
=%%! "
_context%%# +
.%%+ ,
Set%%, /
<%%/ 0
E%%0 1
>%%1 2
(%%2 3
)%%3 4
;%%4 5
if'' 
('' 
filter'' 
!='' 
null'' 
)'' 
{(( 
query)) 
=)) 
query)) 
.)) 
Where)) #
())# $
filter))$ *
)))* +
;))+ ,
}** 
if,, 
(,, 
!,, 
string,, 
.,, 
IsNullOrEmpty,, %
(,,% &#
includeStringProperties,,& =
),,= >
),,> ?
{-- 
foreach.. 
(.. 
var.. 
includeProperty.. ,
in..- /#
includeStringProperties..0 G
...G H
Split..H M
(// 
new// 
[// 
]// 
{// 
$char//  
}//! "
,//" #
StringSplitOptions//$ 6
.//6 7
RemoveEmptyEntries//7 I
)//I J
)//J K
{00 
query11 
=11 
query11 !
.11! "
Include11" )
(11) *
includeProperty11* 9
)119 :
;11: ;
}22 
}33 
if55 
(55 
orderBy55 
!=55 
null55 
)55  
{66 
return77 
await77 
orderBy77 $
(77$ %
query77% *
)77* +
.77+ ,
ToListAsync77, 7
(777 8
)778 9
.779 :
ConfigureAwait77: H
(77H I
false77I N
)77N O
;77O P
}88 
return:: 
(:: 
!:: 

isTracking:: 
)::  
?::! "
await::# (
query::) .
.::. /
AsNoTracking::/ ;
(::; <
)::< =
.::= >
ToListAsync::> I
(::I J
)::J K
:::L M
await::N S
query::T Y
.::Y Z
ToListAsync::Z e
(::e f
)::f g
;::g h
};; 	
public== 
async== 
Task== 
<== 
IEnumerable== %
<==% &
E==& '
>==' (
>==( )
GetAsync==* 2
(==2 3

Expression==3 =
<=== >
Func==> B
<==B C
E==C D
,==D E
bool==F J
>==J K
>==K L
?==L M
filter==N T
===U V
null==W [
,==[ \
Func==] a
<==a b

IQueryable==b l
<==l m
E==m n
>==n o
,==o p
IOrderedQueryable	==q Ç
<
==Ç É
E
==É Ñ
>
==Ñ Ö
>
==Ö Ü
?
==Ü á
orderBy
==à è
=
==ê ë
null
==í ñ
,
==ñ ó
bool
==ò ú

isTracking
==ù ß
=
==® ©
false
==™ Ø
,
==Ø ∞
params
==± ∑

Expression
==∏ ¬
<
==¬ √
Func
==√ «
<
==« »
E
==» …
,
==…  
object
==À —
>
==— “
>
==“ ”
[
==” ‘
]
==‘ ’%
includeObjectProperties
==÷ Ì
)
==Ì Ó
{>> 	

IQueryable?? 
<?? 
E?? 
>?? 
query?? 
=??  !
_context??" *
.??* +
Set??+ .
<??. /
E??/ 0
>??0 1
(??1 2
)??2 3
;??3 4
ifAA 
(AA 
filterAA 
!=AA 
nullAA 
)AA 
{BB 
queryCC 
=CC 
queryCC 
.CC 
WhereCC #
(CC# $
filterCC$ *
)CC* +
;CC+ ,
}DD 
ifFF 
(FF #
includeObjectPropertiesFF '
!=FF( *
nullFF+ /
)FF/ 0
{GG 
foreachHH 
(HH 

ExpressionHH #
<HH# $
FuncHH$ (
<HH( )
EHH) *
,HH* +
objectHH, 2
>HH2 3
>HH3 4
includeHH5 <
inHH= ?#
includeObjectPropertiesHH@ W
)HHW X
{II 
queryJJ 
=JJ 
queryJJ !
.JJ! "
IncludeJJ" )
(JJ) *
includeJJ* 1
)JJ1 2
;JJ2 3
}KK 
}LL 
ifNN 
(NN 
orderByNN 
!=NN 
nullNN 
)NN  
{OO 
returnPP 
awaitPP 
orderByPP $
(PP$ %
queryPP% *
)PP* +
.PP+ ,
ToListAsyncPP, 7
(PP7 8
)PP8 9
;PP9 :
}QQ 
returnSS 
(SS 
!SS 

isTrackingSS 
)SS  
?SS! "
awaitSS# (
querySS) .
.SS. /
AsNoTrackingSS/ ;
(SS; <
)SS< =
.SS= >
ToListAsyncSS> I
(SSI J
)SSJ K
:SSL M
awaitSSN S
querySST Y
.SSY Z
ToListAsyncSSZ e
(SSe f
)SSf g
;SSg h
}TT 	
publicVV 
asyncVV 
TaskVV 
<VV 
EVV 
>VV 
GetByIdAsyncVV )
(VV) *
objectVV* 0
idVV1 3
)VV3 4
{WW 	
returnXX 
awaitXX 
_contextXX  
.XX  !
SetXX! $
<XX$ %
EXX% &
>XX& '
(XX' (
)XX( )
.XX) *
	FindAsyncXX* 3
(XX3 4
idXX4 6
)XX6 7
;XX7 8
}YY 	
public[[ 
async[[ 
Task[[ 
<[[ 
bool[[ 
>[[ 
Exist[[  %
([[% &

Expression[[& 0
<[[0 1
Func[[1 5
<[[5 6
E[[6 7
,[[7 8
bool[[9 =
>[[= >
>[[> ?
filter[[@ F
)[[F G
{\\ 	
return]] 
await]] 
_context]] !
.]]! "
Set]]" %
<]]% &
E]]& '
>]]' (
(]]( )
)]]) *
.]]* +
AnyAsync]]+ 3
(]]3 4
filter]]4 :
)]]: ;
;]]; <
}^^ 	
public`` 
async`` 
Task`` 
UpdateAsync`` %
(``% &
E``& '
entity``( .
)``. /
{aa 	
ifbb 
(bb 
entitybb 
!=bb 
nullbb 
)bb 
{cc 
_contextdd 
.dd 
Setdd 
<dd 
Edd 
>dd 
(dd  
)dd  !
.dd! "
Updatedd" (
(dd( )
entitydd) /
)dd/ 0
;dd0 1
awaitee 
thisee 
.ee 
CommitAsyncee &
(ee& '
)ee' (
;ee( )
}ff 
}gg 	
publicii 
asyncii 
Taskii 
CommitAsyncii %
(ii% &
)ii& '
{jj 	
_contextkk 
.kk 
ChangeTrackerkk "
.kk" #
DetectChangeskk# 0
(kk0 1
)kk1 2
;kk2 3
foreachmm 
(mm 
varmm 
entrymm 
inmm !
_contextmm" *
.mm* +
ChangeTrackermm+ 8
.mm8 9
Entriesmm9 @
(mm@ A
)mmA B
)mmB C
{nn 
switchoo 
(oo 
entryoo 
.oo 
Stateoo #
)oo# $
{pp 
caseqq 
EntityStateqq $
.qq$ %
Addedqq% *
:qq* +
entryrr 
.rr 
Propertyrr &
(rr& '
$strrr' 2
)rr2 3
.rr3 4
CurrentValuerr4 @
=rrA B
DateTimerrC K
.rrK L
UtcNowrrL R
;rrR S
breakss 
;ss 
casett 
EntityStatett $
.tt$ %
Modifiedtt% -
:tt- .
entryuu 
.uu 
Propertyuu &
(uu& '
$struu' 7
)uu7 8
.uu8 9
CurrentValueuu9 E
=uuF G
DateTimeuuH P
.uuP Q
UtcNowuuQ W
;uuW X
breakvv 
;vv 
}ww 
}xx 
awaitzz 
_contextzz 
.zz 
CommitAsynczz &
(zz& '
)zz' (
.zz( )
ConfigureAwaitzz) 7
(zz7 8
falsezz8 =
)zz= >
;zz> ?
}{{ 	
public}} 
void}} 
Dispose}} 
(}} 
)}} 
{~~ 	
Dispose 
( 
true 
) 
; 
GC
ÄÄ 
.
ÄÄ 
SuppressFinalize
ÄÄ 
(
ÄÄ  
this
ÄÄ  $
)
ÄÄ$ %
;
ÄÄ% &
}
ÅÅ 	
	protected
ÉÉ 
virtual
ÉÉ 
void
ÉÉ 
Dispose
ÉÉ &
(
ÉÉ& '
bool
ÉÉ' +
	disposing
ÉÉ, 5
)
ÉÉ5 6
{
ÑÑ 	
this
ÖÖ 
.
ÖÖ 
_context
ÖÖ 
.
ÖÖ 
Dispose
ÖÖ !
(
ÖÖ! "
)
ÖÖ" #
;
ÖÖ# $
}
ÜÜ 	
}
áá 
}àà ¬
VC:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Adapters\Messaging.cs
	namespace 	
Infrastructure
 
. 
Adapters !
;! "
public 
class 
	Messaging 
: 

IMessaging #
{ 
readonly

 
IConnection

 
_brokerConn

 $
=

% &
default

' .
!

. /
;

/ 0
public 

	Messaging 
( 
IEnumerable  
<  !
IConnection! ,
>, -
conn. 2
)2 3
=>4 6
_brokerConn 
= 
conn 
. 
First  
(  !
f! "
=># %
f& '
.' (
ClientProvidedName( :
.: ;
Contains; C
(C D
$strD K
,K L
StringComparisonM ]
.] ^
InvariantCulture^ n
)n o
)o p
;p q
public 

async 
Task 
SendMessageAsync &
(& '
object' -
o. /
,/ 0
string1 7
queue8 =
)= >
{ 
using 
( 
var 
channel 
= 
_brokerConn (
.( )
CreateModel) 4
(4 5
)5 6
)6 7
{ 	
var 
args 
= 
new 

Dictionary %
<% &
string& ,
,, -
object. 4
>4 5
{ 
{ 
$str .
,. /
true0 4
}5 6
} 
; 
channel 
. 
QueueDeclare  
(  !
queue! &
:& '
queue( -
,- .
durable/ 6
:6 7
true8 <
,< =
	exclusive> G
:G H
falseI N
,N O

autoDelete 
: 
false !
,! "
	arguments 
: 
args 
)  
;  !
var 
message 
= 
System  
.  !
Text! %
.% &
Json& *
.* +
JsonSerializer+ 9
.9 :
	Serialize: C
(C D
oD E
)E F
;F G
var 
body 
= 
Encoding 
.  
UTF8  $
.$ %
GetBytes% -
(- .
message. 5
)5 6
;6 7
var 

properties 
= 
channel $
.$ %!
CreateBasicProperties% :
(: ;
); <
;< =

properties   
.   
CorrelationId   $
=  % &
Guid  ' +
.  + ,
NewGuid  , 3
(  3 4
)  4 5
.  5 6
ToString  6 >
(  > ?
)  ? @
;  @ A

properties!! 
.!! 

Persistent!! !
=!!" #
true!!$ (
;!!( )
await"" 
Task"" 
."" 
Run"" 
("" 
("" 
)"" 
=>""  
channel""! (
.""( )
BasicPublish"") 5
(""5 6
exchange""6 >
:""> ?
$str""@ B
,""B C

routingKey""D N
:""N O
queue""P U
,""U V
basicProperties""W f
:""f g

properties""h r
,""r s
body""t x
:""x y
body""z ~
)""~ 
)	"" Ä
.
""Ä Å
ConfigureAwait
""Å è
(
""è ê
false
""ê ï
)
""ï ñ
;
""ñ ó
}## 	
}$$ 
}%% ö&
^C:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Context\PersistenceContext.cs
	namespace 	
Infrastructure
 
. 
Context  
{ 
public 

class 
PersistenceContext #
:$ %
	DbContext& /
{		 
private 
readonly 
IConfiguration '
_config( /
;/ 0
public 
PersistenceContext !
(! "
DbContextOptions" 2
<2 3
PersistenceContext3 E
>E F
optionsG N
,N O
IConfigurationP ^
config_ e
)e f
:g h
basei m
(m n
optionsn u
)u v
{ 	
_config 
= 
config 
; 
} 	
public 
DbSet 
< 
Person 
> 
Person #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
DbSet 
< 
Cell 
> 
Cell 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DbSet 
< 
CellVehicle  
>  !
CellVehicle" -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
DbSet 
< 
Vehicle 
> 
Vehicle %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DbSet 
< 
Parking 
> 
Parking %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DbSet 
< 
InvoiceParking #
># $
InvoiceParking% 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
DbSet 
< 
ParkingValues "
>" #
ParkingValues$ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
async 
Task 
CommitAsync %
(% &
)& '
{ 	
await 
SaveChangesAsync "
(" #
)# $
.$ %
ConfigureAwait% 3
(3 4
false4 9
)9 :
;: ;
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{   	
if!! 
(!! 
modelBuilder!! 
==!! 
null!!  $
)!!$ %
{"" 
return## 
;## 
}$$ 
modelBuilder&& 
.&& 
HasDefaultSchema&& )
(&&) *
_config&&* 1
.&&1 2
GetValue&&2 :
<&&: ;
string&&; A
>&&A B
(&&B C
$str&&C O
)&&O P
)&&P Q
;&&Q R
foreach)) 
()) 
var)) 

entityType)) #
in))$ &
modelBuilder))' 3
.))3 4
Model))4 9
.))9 :
GetEntityTypes)): H
())H I
)))I J
)))J K
{** 
var++ 
t++ 
=++ 

entityType++ "
.++" #
ClrType++# *
;++* +
if,, 
(,, 
typeof,, 
(,, 
DomainEntity,, '
),,' (
.,,( )
IsAssignableFrom,,) 9
(,,9 :
t,,: ;
),,; <
),,< =
{-- 
modelBuilder..  
...  !
Entity..! '
(..' (

entityType..( 2
...2 3
Name..3 7
)..7 8
...8 9
Property..9 A
<..A B
DateTime..B J
>..J K
(..K L
$str..L W
)..W X
...X Y
HasDefaultValueSql..Y k
(..k l
$str..l w
)..w x
;..x y
modelBuilder//  
.//  !
Entity//! '
(//' (

entityType//( 2
.//2 3
Name//3 7
)//7 8
.//8 9
Property//9 A
<//A B
DateTime//B J
>//J K
(//K L
$str//L \
)//\ ]
.//] ^
HasDefaultValueSql//^ p
(//p q
$str//q |
)//| }
;//} ~
}00 
}11 
base22 
.22 
OnModelCreating22  
(22  !
modelBuilder22! -
)22- .
;22. /
}33 	
}44 
}55 ¬"
aC:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Extensions\MessagingExtension.cs
	namespace 	
Infrastructure
 
. 

Extensions #
;# $
public

 
static

 
class

 
MessagingExtension

 &
{ 
public 

static 
IServiceCollection $
AddRabbitSupport% 5
(5 6
this6 :
IServiceCollection; M
servicesN V
, 	
IConfiguration
 
config 
)  
{ 
int 
port 
= 
Int32 
. 
Parse 
( 
Environment *
.* +"
GetEnvironmentVariable+ A
(A B
$strB N
)N O
??P R
configS Y
.Y Z
GetValueZ b
<b c
stringc i
>i j
(j k
$strk z
)z {
){ |
;| }
var 
factory 
= 
new 
ConnectionFactory +
{ 	
HostName 
= 
Environment "
." #"
GetEnvironmentVariable# 9
(9 :
$str: F
)F G
??H J
configK Q
.Q R
GetValueR Z
<Z [
string[ a
>a b
(b c
$strc r
)r s
,s t
UserName 
= 
Environment "
." #"
GetEnvironmentVariable# 9
(9 :
$str: F
)F G
??H J
configK Q
.Q R
GetValueR Z
<Z [
string[ a
>a b
(b c
$strc r
)r s
,s t
Password 
= 
Environment "
." #"
GetEnvironmentVariable# 9
(9 :
$str: F
)F G
??H J
configK Q
.Q R
GetValueR Z
<Z [
string[ a
>a b
(b c
$strc r
)r s
,s t
Port 
= 
port 
, 
VirtualHost 
= 
Environment %
.% &"
GetEnvironmentVariable& <
(< =
$str= J
)J K
??L N
configO U
.U V
GetValueV ^
<^ _
string_ e
>e f
(f g
$strg w
)w x
,x y$
AutomaticRecoveryEnabled $
=% &
true' +
} 	
;	 

services 
. 
AddSingleton 
< 
IConnection )
>) *
(* +
(+ ,
svc, /
)/ 0
=>1 3
{ 	
return 
factory 
. 
CreateConnection +
(+ ,
$", .
{. /
config/ 5
.5 6
GetValue6 >
<> ?
string? E
>E F
(F G
$strG P
)P Q
??R T
$strU \
}\ ]
$str] c
"c d
)d e
;e f
} 	
)	 

;
 
factory 
. "
DispatchConsumersAsync &
=' (
true) -
;- .
services!! 
.!! 
AddSingleton!! 
<!! 
IConnection!! )
>!!) *
(!!* +
(!!+ ,
svc!!, /
)!!/ 0
=>!!1 3
{"" 	
return## 
factory## 
.## 
CreateConnection## +
(##+ ,
$"##, .
{##. /
config##/ 5
.##5 6
GetValue##6 >
<##> ?
string##? E
>##E F
(##F G
$str##G P
)##P Q
??##R T
$str##U \
}##\ ]
$str##] b
"##b c
)##c d
;##d e
}$$ 	
)$$	 

;$$
 
services&& 
.&& 
AddTransient&& 
<&& 

IMessaging&& (
,&&( )
	Messaging&&* 3
>&&3 4
(&&4 5
)&&5 6
;&&6 7
return(( 
services(( 
;(( 
})) 
}** ú
cC:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Extensions\PersistenceExtension.cs
	namespace 	
Infrastructure
 
. 

Extensions #
{$ %
public

 

static

 
class

 !
PersistenceExtensions

 -
{

. /
public 
static 
IServiceCollection (
AddPersistence) 7
(7 8
this8 <
IServiceCollection= O
svcP S
,S T
IConfigurationU c
configd j
)j k
{l m
svc 
. 
AddTransient 
( 
typeof #
(# $
IGenericRepository$ 6
<6 7
>7 8
)8 9
,9 :
typeof; A
(A B
GenericRepositoryB S
<S T
>T U
)U V
)V W
;W X
svc 
. 
AddTransient 
< 
IDbConnection *
>* +
(+ ,
(, -
sp- /
)/ 0
=>1 3
new4 7
SqlConnection8 E
(E F
configF L
.L M
GetConnectionStringM `
(` a
$stra k
)k l
)l m
)m n
;n o
return 
svc 
; 
} 	
} 
} ‚
`C:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Extensions\ServiceExtensions.cs
	namespace 	
Infrastructure
 
. 

Extensions #
{$ %
public 

static 
class 
ServiceExtensions )
{* +
public 
static 
IServiceCollection (
AddDomainServices) :
(: ;
this; ?
IServiceCollection@ R
svcS V
)V W
{ 	
var		 
	_services		 
=		 
	AppDomain		 %
.		% &
CurrentDomain		& 3
.		3 4
GetAssemblies		4 A
(		A B
)		B C
.

 
Where

 
(

 
assembly

 
=>

  "
{

# $
return 
( 
assembly $
.$ %
FullName% -
is. 0
null1 5
)5 6
?7 8
false9 >
:? @
assemblyA I
.I J
FullNameJ R
.R S
ContainsS [
([ \
$str\ d
,d e
StringComparisonf v
.v w
InvariantCulture	w á
)
á à
;
à â
} 
) 
. 

SelectMany 
( 
s 
=>  
s! "
." #
GetTypes# +
(+ ,
), -
)- .
. 
Where 
( 
p 
=> 
p 
. 
CustomAttributes .
.. /
Any/ 2
(2 3
x3 4
=>5 7
x8 9
.9 :
AttributeType: G
==H J
typeofK Q
(Q R"
DomainServiceAttributeR h
)h i
)i j
)j k
;k l
foreach 
( 
var 
_service !
in" $
	_services% .
). /
{ 
svc 
. 
AddTransient  
(  !
_service! )
)) *
;* +
} 
return 
svc 
; 
} 	
} 
} º
iC:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Inicialize\Entities\ParkingInitialize.cs
	namespace 	
Infraestructura
 
. 
Inicializacion (
{ 
public 

static 
class 
ParkingInitialize )
{ 
public		 
static		 
void		 
Inicializar		 &
(		& '
PersistenceContext		' 9
persistenceContext		: L
)		L M
{

 	
var 
cells 
= 
new 
List  
<  !
Domain! '
.' (
Entities( 0
.0 1
Cell1 5
>5 6
(6 7
)7 8
;8 9
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num  "
;" #
i$ %
++% '
)' (
{ 
cells 
. 
Add 
( 
new 
Domain $
.$ %
Entities% -
.- .
Cell. 2
{3 4
Busy 
= 
false  
,  !
Number 
= 
i 
, 
Type 
= 
$str "
} 
) 
; 
} 
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num  "
;" #
i$ %
++% '
)' (
{ 
cells 
. 
Add 
( 
new 
Domain $
.$ %
Entities% -
.- .
Cell. 2
{ 
Busy 
= 
false  
,  !
Number 
= 
i 
, 
Type 
= 
$str (
} 
) 
; 
} 
var   
parking   
=   
new   
Domain   $
.  $ %
Entities  % -
.  - .
Parking  . 5
{!! 
Cells"" 
="" 
cells"" 
,"" 
Name## 
=## 
$str## .
}$$ 
;$$ 
persistenceContext&& 
.&& 
Parking&& &
.&&& '
Add&&' *
(&&* +
parking&&+ 2
)&&2 3
;&&3 4
persistenceContext'' 
.'' 
SaveChanges'' *
(''* +
)''+ ,
;'', -
}(( 	
})) 
}** ©
oC:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Inicialize\Entities\ParkingValuesInitialize.cs
	namespace 	
Infraestructura
 
. 
Inicializacion (
{ 
public 

static 
class #
ParkingValuesInitialize /
{ 
public		 
static		 
void		 
Inicializar		 &
(		& '
PersistenceContext		' 9
persistenceContext		: L
)		L M
{

 	
var 
parkingValues 
= 
new  #
Domain$ *
.* +
Entities+ 3
.3 4
ParkingValues4 A
{ 
MotorcycleHourValue #
=$ %
$num& )
,) *
DayMotorcycleValue "
=# $
$num% )
,) *
CarHourValue 
= 
$num #
,# $
CarDayValue 
= 
$num "
," #
ValueSurchange 
=  
$num! %
} 
; 
persistenceContext 
. 
ParkingValues ,
., -
Add- 0
(0 1
parkingValues1 >
)> ?
;? @
persistenceContext 
. 
SaveChanges *
(* +
)+ ,
;, -
} 	
} 
} Ó
TC:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Inicialize\Start.cs
	namespace 	
ICBF
 
. 
MICAV 
. 
Infrastructure #
.# $

Initialize$ .
{ 
public 

class 
Start 
{		 
private

 
readonly

 
PersistenceContext

 +
_context

, 4
;

4 5
public 
Start 
( 
PersistenceContext '
context( /
)/ 0
{ 	
_context 
= 
context 
; 
} 	
public 
void 
Inicializar 
(  
)  !
{ 	
if 
( 
! 
_context 
. 
Parking !
.! "
Any" %
(% &
)& '
)' (
ParkingInitialize) :
.: ;
Inicializar; F
(F G
_contextG O
)O P
;P Q
} 	
} 
} ¬Î
kC:\Users\diego.villa\Downloads\Proyectos\ADN\Back\Infrastructure\Migrations\20211105114527_InitialCreate.cs
	namespace 	
Infrastructure
 
. 

Migrations #
{ 
public 

partial 
class 
InitialCreate &
:' (
	Migration) 2
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
EnsureSchema

 )
(

) *
name 
: 
$str 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
schema 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
	CreatedOn 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= H
,H I
nullableJ R
:R S
falseT Y
,Y Z
defaultValueSql[ j
:j k
$strl w
)w x
,x y
LastModifiedOn "
=# $
table% *
.* +
Column+ 1
<1 2
DateTime2 :
>: ;
(; <
type< @
:@ A
$strB M
,M N
nullableO W
:W X
falseY ^
,^ _
defaultValueSql` o
:o p
$strq |
)| }
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 1
,1 2
x3 4
=>5 7
x8 9
.9 :
Id: <
)< =
;= >
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str %
,% &
schema 
: 
$str 
,  
columns   
:   
table   
=>   !
new  " %
{!! 
Id"" 
="" 
table"" 
."" 
Column"" %
<""% &
int""& )
>"") *
(""* +
type""+ /
:""/ 0
$str""1 6
,""6 7
nullable""8 @
:""@ A
false""B G
)""G H
.## 

Annotation## #
(### $
$str##$ 8
,##8 9
$str##: @
)##@ A
,##A B
MotorcycleHourValue$$ '
=$$( )
table$$* /
.$$/ 0
Column$$0 6
<$$6 7
double$$7 =
>$$= >
($$> ?
type$$? C
:$$C D
$str$$E L
,$$L M
nullable$$N V
:$$V W
false$$X ]
)$$] ^
,$$^ _
DayMotorcycleValue%% &
=%%' (
table%%) .
.%%. /
Column%%/ 5
<%%5 6
double%%6 <
>%%< =
(%%= >
type%%> B
:%%B C
$str%%D K
,%%K L
nullable%%M U
:%%U V
false%%W \
)%%\ ]
,%%] ^
CarHourValue&&  
=&&! "
table&&# (
.&&( )
Column&&) /
<&&/ 0
double&&0 6
>&&6 7
(&&7 8
type&&8 <
:&&< =
$str&&> E
,&&E F
nullable&&G O
:&&O P
false&&Q V
)&&V W
,&&W X
CarDayValue'' 
=''  !
table''" '
.''' (
Column''( .
<''. /
double''/ 5
>''5 6
(''6 7
type''7 ;
:''; <
$str''= D
,''D E
nullable''F N
:''N O
false''P U
)''U V
,''V W
ValueSurchange(( "
=((# $
table((% *
.((* +
Column((+ 1
<((1 2
double((2 8
>((8 9
(((9 :
type((: >
:((> ?
$str((@ G
,((G H
nullable((I Q
:((Q R
false((S X
)((X Y
,((Y Z
	CreatedOn)) 
=)) 
table))  %
.))% &
Column))& ,
<)), -
DateTime))- 5
>))5 6
())6 7
type))7 ;
:)); <
$str))= H
,))H I
nullable))J R
:))R S
false))T Y
,))Y Z
defaultValueSql))[ j
:))j k
$str))l w
)))w x
,))x y
LastModifiedOn** "
=**# $
table**% *
.*** +
Column**+ 1
<**1 2
DateTime**2 :
>**: ;
(**; <
type**< @
:**@ A
$str**B M
,**M N
nullable**O W
:**W X
false**Y ^
,**^ _
defaultValueSql**` o
:**o p
$str**q |
)**| }
}++ 
,++ 
constraints,, 
:,, 
table,, "
=>,,# %
{-- 
table.. 
... 

PrimaryKey.. $
(..$ %
$str..% 7
,..7 8
x..9 :
=>..; =
x..> ?
...? @
Id..@ B
)..B C
;..C D
}// 
)// 
;// 
migrationBuilder11 
.11 
CreateTable11 (
(11( )
name22 
:22 
$str22 
,22 
schema33 
:33 
$str33 
,33  
columns44 
:44 
table44 
=>44 !
new44" %
{55 
Id66 
=66 
table66 
.66 
Column66 %
<66% &
Guid66& *
>66* +
(66+ ,
type66, 0
:660 1
$str662 D
,66D E
nullable66F N
:66N O
false66P U
)66U V
,66V W
	FirstName77 
=77 
table77  %
.77% &
Column77& ,
<77, -
string77- 3
>773 4
(774 5
type775 9
:779 :
$str77; J
,77J K
nullable77L T
:77T U
false77V [
)77[ \
,77\ ]
LastName88 
=88 
table88 $
.88$ %
Column88% +
<88+ ,
string88, 2
>882 3
(883 4
type884 8
:888 9
$str88: I
,88I J
nullable88K S
:88S T
false88U Z
)88Z [
,88[ \
Email99 
=99 
table99 !
.99! "
Column99" (
<99( )
string99) /
>99/ 0
(990 1
type991 5
:995 6
$str997 F
,99F G
nullable99H P
:99P Q
false99R W
)99W X
,99X Y
DateOfBirth:: 
=::  !
table::" '
.::' (
Column::( .
<::. /
DateTime::/ 7
>::7 8
(::8 9
type::9 =
:::= >
$str::? J
,::J K
nullable::L T
:::T U
false::V [
)::[ \
,::\ ]
	CreatedOn;; 
=;; 
table;;  %
.;;% &
Column;;& ,
<;;, -
DateTime;;- 5
>;;5 6
(;;6 7
type;;7 ;
:;;; <
$str;;= H
,;;H I
nullable;;J R
:;;R S
false;;T Y
,;;Y Z
defaultValueSql;;[ j
:;;j k
$str;;l w
);;w x
,;;x y
LastModifiedOn<< "
=<<# $
table<<% *
.<<* +
Column<<+ 1
<<<1 2
DateTime<<2 :
><<: ;
(<<; <
type<<< @
:<<@ A
$str<<B M
,<<M N
nullable<<O W
:<<W X
false<<Y ^
,<<^ _
defaultValueSql<<` o
:<<o p
$str<<q |
)<<| }
}== 
,== 
constraints>> 
:>> 
table>> "
=>>># %
{?? 
table@@ 
.@@ 

PrimaryKey@@ $
(@@$ %
$str@@% 0
,@@0 1
x@@2 3
=>@@4 6
x@@7 8
.@@8 9
Id@@9 ;
)@@; <
;@@< =
}AA 
)AA 
;AA 
migrationBuilderCC 
.CC 
CreateTableCC (
(CC( )
nameDD 
:DD 
$strDD 
,DD  
schemaEE 
:EE 
$strEE 
,EE  
columnsFF 
:FF 
tableFF 
=>FF !
newFF" %
{GG 
IdHH 
=HH 
tableHH 
.HH 
ColumnHH %
<HH% &
intHH& )
>HH) *
(HH* +
typeHH+ /
:HH/ 0
$strHH1 6
,HH6 7
nullableHH8 @
:HH@ A
falseHHB G
)HHG H
.II 

AnnotationII #
(II# $
$strII$ 8
,II8 9
$strII: @
)II@ A
,IIA B
PlaqueJJ 
=JJ 
tableJJ "
.JJ" #
ColumnJJ# )
<JJ) *
stringJJ* 0
>JJ0 1
(JJ1 2
typeJJ2 6
:JJ6 7
$strJJ8 G
,JJG H
nullableJJI Q
:JJQ R
falseJJS X
)JJX Y
,JJY Z
TypeKK 
=KK 
tableKK  
.KK  !
ColumnKK! '
<KK' (
stringKK( .
>KK. /
(KK/ 0
typeKK0 4
:KK4 5
$strKK6 E
,KKE F
nullableKKG O
:KKO P
falseKKQ V
)KKV W
,KKW X
	CylindersLL 
=LL 
tableLL  %
.LL% &
ColumnLL& ,
<LL, -
intLL- 0
>LL0 1
(LL1 2
typeLL2 6
:LL6 7
$strLL8 =
,LL= >
nullableLL? G
:LLG H
falseLLI N
)LLN O
,LLO P
	CreatedOnMM 
=MM 
tableMM  %
.MM% &
ColumnMM& ,
<MM, -
DateTimeMM- 5
>MM5 6
(MM6 7
typeMM7 ;
:MM; <
$strMM= H
,MMH I
nullableMMJ R
:MMR S
falseMMT Y
,MMY Z
defaultValueSqlMM[ j
:MMj k
$strMMl w
)MMw x
,MMx y
LastModifiedOnNN "
=NN# $
tableNN% *
.NN* +
ColumnNN+ 1
<NN1 2
DateTimeNN2 :
>NN: ;
(NN; <
typeNN< @
:NN@ A
$strNNB M
,NNM N
nullableNNO W
:NNW X
falseNNY ^
,NN^ _
defaultValueSqlNN` o
:NNo p
$strNNq |
)NN| }
}OO 
,OO 
constraintsPP 
:PP 
tablePP "
=>PP# %
{QQ 
tableRR 
.RR 

PrimaryKeyRR $
(RR$ %
$strRR% 1
,RR1 2
xRR3 4
=>RR5 7
xRR8 9
.RR9 :
IdRR: <
)RR< =
;RR= >
}SS 
)SS 
;SS 
migrationBuilderUU 
.UU 
CreateTableUU (
(UU( )
nameVV 
:VV 
$strVV 
,VV 
schemaWW 
:WW 
$strWW 
,WW  
columnsXX 
:XX 
tableXX 
=>XX !
newXX" %
{YY 
IdZZ 
=ZZ 
tableZZ 
.ZZ 
ColumnZZ %
<ZZ% &
intZZ& )
>ZZ) *
(ZZ* +
typeZZ+ /
:ZZ/ 0
$strZZ1 6
,ZZ6 7
nullableZZ8 @
:ZZ@ A
falseZZB G
)ZZG H
.[[ 

Annotation[[ #
([[# $
$str[[$ 8
,[[8 9
$str[[: @
)[[@ A
,[[A B
Number\\ 
=\\ 
table\\ "
.\\" #
Column\\# )
<\\) *
int\\* -
>\\- .
(\\. /
type\\/ 3
:\\3 4
$str\\5 :
,\\: ;
nullable\\< D
:\\D E
false\\F K
)\\K L
,\\L M
Busy]] 
=]] 
table]]  
.]]  !
Column]]! '
<]]' (
bool]]( ,
>]], -
(]]- .
type]]. 2
:]]2 3
$str]]4 9
,]]9 :
nullable]]; C
:]]C D
false]]E J
)]]J K
,]]K L
Type^^ 
=^^ 
table^^  
.^^  !
Column^^! '
<^^' (
string^^( .
>^^. /
(^^/ 0
type^^0 4
:^^4 5
$str^^6 E
,^^E F
nullable^^G O
:^^O P
false^^Q V
)^^V W
,^^W X
	CreatedOn__ 
=__ 
table__  %
.__% &
Column__& ,
<__, -
DateTime__- 5
>__5 6
(__6 7
type__7 ;
:__; <
$str__= H
,__H I
nullable__J R
:__R S
false__T Y
,__Y Z
defaultValueSql__[ j
:__j k
$str__l w
)__w x
,__x y
LastModifiedOn`` "
=``# $
table``% *
.``* +
Column``+ 1
<``1 2
DateTime``2 :
>``: ;
(``; <
type``< @
:``@ A
$str``B M
,``M N
nullable``O W
:``W X
false``Y ^
,``^ _
defaultValueSql``` o
:``o p
$str``q |
)``| }
,``} ~
	ParkingIdaa 
=aa 
tableaa  %
.aa% &
Columnaa& ,
<aa, -
intaa- 0
>aa0 1
(aa1 2
typeaa2 6
:aa6 7
$straa8 =
,aa= >
nullableaa? G
:aaG H
trueaaI M
)aaM N
}bb 
,bb 
constraintscc 
:cc 
tablecc "
=>cc# %
{dd 
tableee 
.ee 

PrimaryKeyee $
(ee$ %
$stree% .
,ee. /
xee0 1
=>ee2 4
xee5 6
.ee6 7
Idee7 9
)ee9 :
;ee: ;
tableff 
.ff 

ForeignKeyff $
(ff$ %
namegg 
:gg 
$strgg 9
,gg9 :
columnhh 
:hh 
xhh  !
=>hh" $
xhh% &
.hh& '
	ParkingIdhh' 0
,hh0 1
principalSchemaii '
:ii' (
$strii) 0
,ii0 1
principalTablejj &
:jj& '
$strjj( 1
,jj1 2
principalColumnkk '
:kk' (
$strkk) -
,kk- .
onDeletell  
:ll  !
ReferentialActionll" 3
.ll3 4
Restrictll4 <
)ll< =
;ll= >
}mm 
)mm 
;mm 
migrationBuilderoo 
.oo 
CreateTableoo (
(oo( )
namepp 
:pp 
$strpp #
,pp# $
schemaqq 
:qq 
$strqq 
,qq  
columnsrr 
:rr 
tablerr 
=>rr !
newrr" %
{ss 
Idtt 
=tt 
tablett 
.tt 
Columntt %
<tt% &
inttt& )
>tt) *
(tt* +
typett+ /
:tt/ 0
$strtt1 6
,tt6 7
nullablett8 @
:tt@ A
falsettB G
)ttG H
.uu 

Annotationuu #
(uu# $
$struu$ 8
,uu8 9
$struu: @
)uu@ A
,uuA B
CellIdvv 
=vv 
tablevv "
.vv" #
Columnvv# )
<vv) *
intvv* -
>vv- .
(vv. /
typevv/ 3
:vv3 4
$strvv5 :
,vv: ;
nullablevv< D
:vvD E
truevvF J
)vvJ K
,vvK L
	VehicleIdww 
=ww 
tableww  %
.ww% &
Columnww& ,
<ww, -
intww- 0
>ww0 1
(ww1 2
typeww2 6
:ww6 7
$strww8 =
,ww= >
nullableww? G
:wwG H
truewwI M
)wwM N
,wwN O
	EntryDatexx 
=xx 
tablexx  %
.xx% &
Columnxx& ,
<xx, -
DateTimexx- 5
>xx5 6
(xx6 7
typexx7 ;
:xx; <
$strxx= H
,xxH I
nullablexxJ R
:xxR S
falsexxT Y
)xxY Z
,xxZ [
DepartureDateyy !
=yy" #
tableyy$ )
.yy) *
Columnyy* 0
<yy0 1
DateTimeyy1 9
>yy9 :
(yy: ;
typeyy; ?
:yy? @
$stryyA L
,yyL M
nullableyyN V
:yyV W
falseyyX ]
)yy] ^
,yy^ _
Statezz 
=zz 
tablezz !
.zz! "
Columnzz" (
<zz( )
boolzz) -
>zz- .
(zz. /
typezz/ 3
:zz3 4
$strzz5 :
,zz: ;
nullablezz< D
:zzD E
falsezzF K
)zzK L
,zzL M
	CreatedOn{{ 
={{ 
table{{  %
.{{% &
Column{{& ,
<{{, -
DateTime{{- 5
>{{5 6
({{6 7
type{{7 ;
:{{; <
$str{{= H
,{{H I
nullable{{J R
:{{R S
false{{T Y
,{{Y Z
defaultValueSql{{[ j
:{{j k
$str{{l w
){{w x
,{{x y
LastModifiedOn|| "
=||# $
table||% *
.||* +
Column||+ 1
<||1 2
DateTime||2 :
>||: ;
(||; <
type||< @
:||@ A
$str||B M
,||M N
nullable||O W
:||W X
false||Y ^
,||^ _
defaultValueSql||` o
:||o p
$str||q |
)||| }
}}} 
,}} 
constraints~~ 
:~~ 
table~~ "
=>~~# %
{ 
table
ÄÄ 
.
ÄÄ 

PrimaryKey
ÄÄ $
(
ÄÄ$ %
$str
ÄÄ% 5
,
ÄÄ5 6
x
ÄÄ7 8
=>
ÄÄ9 ;
x
ÄÄ< =
.
ÄÄ= >
Id
ÄÄ> @
)
ÄÄ@ A
;
ÄÄA B
table
ÅÅ 
.
ÅÅ 

ForeignKey
ÅÅ $
(
ÅÅ$ %
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ :
,
ÇÇ: ;
column
ÉÉ 
:
ÉÉ 
x
ÉÉ  !
=>
ÉÉ" $
x
ÉÉ% &
.
ÉÉ& '
CellId
ÉÉ' -
,
ÉÉ- .
principalSchema
ÑÑ '
:
ÑÑ' (
$str
ÑÑ) 0
,
ÑÑ0 1
principalTable
ÖÖ &
:
ÖÖ& '
$str
ÖÖ( .
,
ÖÖ. /
principalColumn
ÜÜ '
:
ÜÜ' (
$str
ÜÜ) -
,
ÜÜ- .
onDelete
áá  
:
áá  !
ReferentialAction
áá" 3
.
áá3 4
Restrict
áá4 <
)
áá< =
;
áá= >
table
àà 
.
àà 

ForeignKey
àà $
(
àà$ %
name
ââ 
:
ââ 
$str
ââ @
,
ââ@ A
column
ää 
:
ää 
x
ää  !
=>
ää" $
x
ää% &
.
ää& '
	VehicleId
ää' 0
,
ää0 1
principalSchema
ãã '
:
ãã' (
$str
ãã) 0
,
ãã0 1
principalTable
åå &
:
åå& '
$str
åå( 1
,
åå1 2
principalColumn
çç '
:
çç' (
$str
çç) -
,
çç- .
onDelete
éé  
:
éé  !
ReferentialAction
éé" 3
.
éé3 4
Restrict
éé4 <
)
éé< =
;
éé= >
}
èè 
)
èè 
;
èè 
migrationBuilder
ëë 
.
ëë 
CreateTable
ëë (
(
ëë( )
name
íí 
:
íí 
$str
íí &
,
íí& '
schema
ìì 
:
ìì 
$str
ìì 
,
ìì  
columns
îî 
:
îî 
table
îî 
=>
îî !
new
îî" %
{
ïï 
Id
ññ 
=
ññ 
table
ññ 
.
ññ 
Column
ññ %
<
ññ% &
int
ññ& )
>
ññ) *
(
ññ* +
type
ññ+ /
:
ññ/ 0
$str
ññ1 6
,
ññ6 7
nullable
ññ8 @
:
ññ@ A
false
ññB G
)
ññG H
.
óó 

Annotation
óó #
(
óó# $
$str
óó$ 8
,
óó8 9
$str
óó: @
)
óó@ A
,
óóA B
SurchangeValue
òò "
=
òò# $
table
òò% *
.
òò* +
Column
òò+ 1
<
òò1 2
double
òò2 8
>
òò8 9
(
òò9 :
type
òò: >
:
òò> ?
$str
òò@ G
,
òòG H
nullable
òòI Q
:
òòQ R
false
òòS X
)
òòX Y
,
òòY Z
Subtotal
ôô 
=
ôô 
table
ôô $
.
ôô$ %
Column
ôô% +
<
ôô+ ,
double
ôô, 2
>
ôô2 3
(
ôô3 4
type
ôô4 8
:
ôô8 9
$str
ôô: A
,
ôôA B
nullable
ôôC K
:
ôôK L
false
ôôM R
)
ôôR S
,
ôôS T

TotalValue
öö 
=
öö  
table
öö! &
.
öö& '
Column
öö' -
<
öö- .
double
öö. 4
>
öö4 5
(
öö5 6
type
öö6 :
:
öö: ;
$str
öö< C
,
ööC D
nullable
ööE M
:
ööM N
false
ööO T
)
ööT U
,
ööU V
CellVehicleId
õõ !
=
õõ" #
table
õõ$ )
.
õõ) *
Column
õõ* 0
<
õõ0 1
int
õõ1 4
>
õõ4 5
(
õõ5 6
type
õõ6 :
:
õõ: ;
$str
õõ< A
,
õõA B
nullable
õõC K
:
õõK L
true
õõM Q
)
õõQ R
,
õõR S
ParkingValuesId
úú #
=
úú$ %
table
úú& +
.
úú+ ,
Column
úú, 2
<
úú2 3
int
úú3 6
>
úú6 7
(
úú7 8
type
úú8 <
:
úú< =
$str
úú> C
,
úúC D
nullable
úúE M
:
úúM N
true
úúO S
)
úúS T
,
úúT U
	CreatedOn
ùù 
=
ùù 
table
ùù  %
.
ùù% &
Column
ùù& ,
<
ùù, -
DateTime
ùù- 5
>
ùù5 6
(
ùù6 7
type
ùù7 ;
:
ùù; <
$str
ùù= H
,
ùùH I
nullable
ùùJ R
:
ùùR S
false
ùùT Y
,
ùùY Z
defaultValueSql
ùù[ j
:
ùùj k
$str
ùùl w
)
ùùw x
,
ùùx y
LastModifiedOn
ûû "
=
ûû# $
table
ûû% *
.
ûû* +
Column
ûû+ 1
<
ûû1 2
DateTime
ûû2 :
>
ûû: ;
(
ûû; <
type
ûû< @
:
ûû@ A
$str
ûûB M
,
ûûM N
nullable
ûûO W
:
ûûW X
false
ûûY ^
,
ûû^ _
defaultValueSql
ûû` o
:
ûûo p
$str
ûûq |
)
ûû| }
}
üü 
,
üü 
constraints
†† 
:
†† 
table
†† "
=>
††# %
{
°° 
table
¢¢ 
.
¢¢ 

PrimaryKey
¢¢ $
(
¢¢$ %
$str
¢¢% 8
,
¢¢8 9
x
¢¢: ;
=>
¢¢< >
x
¢¢? @
.
¢¢@ A
Id
¢¢A C
)
¢¢C D
;
¢¢D E
table
££ 
.
££ 

ForeignKey
££ $
(
££$ %
name
§§ 
:
§§ 
$str
§§ K
,
§§K L
column
•• 
:
•• 
x
••  !
=>
••" $
x
••% &
.
••& '
CellVehicleId
••' 4
,
••4 5
principalSchema
¶¶ '
:
¶¶' (
$str
¶¶) 0
,
¶¶0 1
principalTable
ßß &
:
ßß& '
$str
ßß( 5
,
ßß5 6
principalColumn
®® '
:
®®' (
$str
®®) -
,
®®- .
onDelete
©©  
:
©©  !
ReferentialAction
©©" 3
.
©©3 4
Restrict
©©4 <
)
©©< =
;
©©= >
table
™™ 
.
™™ 

ForeignKey
™™ $
(
™™$ %
name
´´ 
:
´´ 
$str
´´ O
,
´´O P
column
¨¨ 
:
¨¨ 
x
¨¨  !
=>
¨¨" $
x
¨¨% &
.
¨¨& '
ParkingValuesId
¨¨' 6
,
¨¨6 7
principalSchema
≠≠ '
:
≠≠' (
$str
≠≠) 0
,
≠≠0 1
principalTable
ÆÆ &
:
ÆÆ& '
$str
ÆÆ( 7
,
ÆÆ7 8
principalColumn
ØØ '
:
ØØ' (
$str
ØØ) -
,
ØØ- .
onDelete
∞∞  
:
∞∞  !
ReferentialAction
∞∞" 3
.
∞∞3 4
Restrict
∞∞4 <
)
∞∞< =
;
∞∞= >
}
±± 
)
±± 
;
±± 
migrationBuilder
≥≥ 
.
≥≥ 
CreateIndex
≥≥ (
(
≥≥( )
name
¥¥ 
:
¥¥ 
$str
¥¥ )
,
¥¥) *
schema
µµ 
:
µµ 
$str
µµ 
,
µµ  
table
∂∂ 
:
∂∂ 
$str
∂∂ 
,
∂∂ 
column
∑∑ 
:
∑∑ 
$str
∑∑ #
)
∑∑# $
;
∑∑$ %
migrationBuilder
ππ 
.
ππ 
CreateIndex
ππ (
(
ππ( )
name
∫∫ 
:
∫∫ 
$str
∫∫ -
,
∫∫- .
schema
ªª 
:
ªª 
$str
ªª 
,
ªª  
table
ºº 
:
ºº 
$str
ºº $
,
ºº$ %
column
ΩΩ 
:
ΩΩ 
$str
ΩΩ  
)
ΩΩ  !
;
ΩΩ! "
migrationBuilder
øø 
.
øø 
CreateIndex
øø (
(
øø( )
name
¿¿ 
:
¿¿ 
$str
¿¿ 0
,
¿¿0 1
schema
¡¡ 
:
¡¡ 
$str
¡¡ 
,
¡¡  
table
¬¬ 
:
¬¬ 
$str
¬¬ $
,
¬¬$ %
column
√√ 
:
√√ 
$str
√√ #
)
√√# $
;
√√$ %
migrationBuilder
≈≈ 
.
≈≈ 
CreateIndex
≈≈ (
(
≈≈( )
name
∆∆ 
:
∆∆ 
$str
∆∆ 7
,
∆∆7 8
schema
«« 
:
«« 
$str
«« 
,
««  
table
»» 
:
»» 
$str
»» '
,
»»' (
column
…… 
:
…… 
$str
…… '
)
……' (
;
……( )
migrationBuilder
ÀÀ 
.
ÀÀ 
CreateIndex
ÀÀ (
(
ÀÀ( )
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ 9
,
ÃÃ9 :
schema
ÕÕ 
:
ÕÕ 
$str
ÕÕ 
,
ÕÕ  
table
ŒŒ 
:
ŒŒ 
$str
ŒŒ '
,
ŒŒ' (
column
œœ 
:
œœ 
$str
œœ )
)
œœ) *
;
œœ* +
}
–– 	
	protected
““ 
override
““ 
void
““ 
Down
““  $
(
““$ %
MigrationBuilder
““% 5
migrationBuilder
““6 F
)
““F G
{
”” 	
migrationBuilder
‘‘ 
.
‘‘ 
	DropTable
‘‘ &
(
‘‘& '
name
’’ 
:
’’ 
$str
’’ &
,
’’& '
schema
÷÷ 
:
÷÷ 
$str
÷÷ 
)
÷÷  
;
÷÷  !
migrationBuilder
ÿÿ 
.
ÿÿ 
	DropTable
ÿÿ &
(
ÿÿ& '
name
ŸŸ 
:
ŸŸ 
$str
ŸŸ 
,
ŸŸ 
schema
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ 
)
⁄⁄  
;
⁄⁄  !
migrationBuilder
‹‹ 
.
‹‹ 
	DropTable
‹‹ &
(
‹‹& '
name
›› 
:
›› 
$str
›› #
,
››# $
schema
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ 
)
ﬁﬁ  
;
ﬁﬁ  !
migrationBuilder
‡‡ 
.
‡‡ 
	DropTable
‡‡ &
(
‡‡& '
name
·· 
:
·· 
$str
·· %
,
··% &
schema
‚‚ 
:
‚‚ 
$str
‚‚ 
)
‚‚  
;
‚‚  !
migrationBuilder
‰‰ 
.
‰‰ 
	DropTable
‰‰ &
(
‰‰& '
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ 
,
ÂÂ 
schema
ÊÊ 
:
ÊÊ 
$str
ÊÊ 
)
ÊÊ  
;
ÊÊ  !
migrationBuilder
ËË 
.
ËË 
	DropTable
ËË &
(
ËË& '
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ 
,
ÈÈ  
schema
ÍÍ 
:
ÍÍ 
$str
ÍÍ 
)
ÍÍ  
;
ÍÍ  !
migrationBuilder
ÏÏ 
.
ÏÏ 
	DropTable
ÏÏ &
(
ÏÏ& '
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ 
,
ÌÌ  
schema
ÓÓ 
:
ÓÓ 
$str
ÓÓ 
)
ÓÓ  
;
ÓÓ  !
}
ÔÔ 	
}
 
}ÒÒ 